{
	"swagger": "2.0",
	"info": {
		"description": "Create a community of like minded authors to foster inspiration and innovation by leveraging the modern web.",
		"version": "1.0.0",
		"title": "Authors Haven - A Social platform for the creative at heart"
	},
	"host": "localhost:3000",
	"basePath": "/api",
	"tags": [
		{
			"name": "Article",
			"description": "Information about the articles endpoints"
		},
		{
			"name": "Social login",
			"description": "Enable users to login using their social accounts"
		},
		{
			"name": "Forgot password",
			"description": "Send Reset password link on email"
		},
		{
			"name": "Rate articles",
			"description": "Enable users to leave ratings on articles"
		}
	],
	"schemes": [
		"https",
		"http"
	],
	"paths": {
		"/articles": {
			"post": {
				"tags": [
					"Articles"
				],
				"summary": "Create an article",
				"description": "Authentication required, returns an article",
				"operationId": " ",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"type": "object",
							"properties": {
								"article": {
									"properties": {
										"title": {
											"type": "string"
										},
										"description": {
											"type": "string"
										},
										"body": {
											"type": "string"
										},
										"images": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"Tags": {
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									},
									"type": "object"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Ok"
					},
					"400": {
						"description": "Invalid parameter"
					},
					"401": {
						"description": "Unauthorized request"
					}
				}
			},
			"get": {
				"tags": [
					"Articles"
				],
				"summary": "Get all articles",
				"description": "Authentication required, returns articles. No additional parameters required",
				"operationId": "",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [],
				"responses": {
					"401": {
						"description": "Unauthorized request"
					}
				}
			}
		},
		"articles/:slug": {
			"get": {
				"tags": [
					"Articles"
				],
				"summary": "Get a single article",
				"description": "Authentication required, returns a article. No additional parameters required",
				"operationId": "",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "slug",
						"description": "The slug of the article"
					}
				],
				"responses": {
					"200": {
						"description": "The article object"
					},
					"404": {
						"description": "The article was not found"
					},
					"401": {
						"description": "Unauthorized request"
					}
				}
			},
			"put": {
				"tags": [
					"Articles"
				],
				"summary": "Update the article",
				"description": "Authentication required, returns the updated article. No additional parameters required",
				"operationId": null,
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "slug",
						"description": "The slug of the article"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"type": "object",
							"properties": {
								"article": {
									"properties": {
										"title": {
											"type": "string"
										},
										"description": {
											"type": "string"
										},
										"body": {
											"type": "string"
										}
									},
									"type": "object"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "The updated article"
					},
					"404": {
						"description": "The article was not found"
					}
				}
			},
			"delete": {
				"tags": [
					"Articles"
				],
				"summary": "Delete an article",
				"description": "Authentication required, returns the updated article. No additional parameters required",
				"operationId": null,
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "slug",
						"description": "The slug of the article"
					}
				],
				"responses": {
					"200": {
						"description": "The success message"
					},
					"404": {
						"description": "The article was not found"
					}
				}
			}
		},
		"/api/auth/signup": {
			"post": {
				"tags": [
					"signup"
				],
				"summary": "User Registration",
				"description": "Username, Email, password required, returns a Profile. No additional parameters required",
				"operationId": "",
				"consumes": [
					"application/json",
					"application/xml"
				],
				"produces": [
					"application/xml",
					"application/json"
				],
				"parameters": [
					{
						"name": "username",
						"in": "path",
						"description": "The username of the user",
						"required": true,
						"type": "string"
					},
					{
						"name": "email",
						"in": "path",
						"description": "The email of the user",
						"required": true,
						"type": "string"
					},
					{
						"name": "password",
						"in": "path",
						"description": "Password should contain at least 1 Uppercase, 1 lowercase and a number",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"400": {
						"description": "Invalid Email supplied"
					},
					"409": {
						"description": "Email already exists"
					}
				}
			},
			"post": {
				"tags": [
					"login"
				],
				"summary": "User login",
				"description": "Email, password required, returns a Profile. No additional parameters required",
				"operationId": "",
				"consumes": [
					"application/json",
					"application/xml"
				],
				"produces": [
					"application/xml",
					"application/json"
				],
				"parameters": [
					{
						"name": "email",
						"in": "path",
						"description": "The email of the user",
						"required": true,
						"type": "string"
					},
					{
						"name": "password",
						"in": "path",
						"description": "Password of the User",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"400": {
						"description": "Email and Password required"
					},
					"401": {
						"description": "The credentials you provided is incorrect"
					}
				}
			},
			"delete": {
				"tags": [
					"profile"
				],
				"summary": "Unfollow user",
				"description": "Authentication required, returns a Profile. No additional parameters required",
				"operationId": null,
				"produces": [
					"application/xml",
					"application/json"
				],
				"parameters": [
					{
						"name": "username",
						"in": "path",
						"description": "The username of the user to unfollow",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "successful operation"
					},
					"400": {
						"description": "Invalid username"
					}
				}
			}
		},
		"/auth/facebook": {
			"post": {
				"tags": [
					"Facebook login"
				],
				"summary": "Enable login with facebook",
				"description": "",
				"operationId": " ",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"type": "object",
							"properties": {
								"access_token": {
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Logged in successfully"
					},
					"201": {
						"description": "User logged in successfully for the first time"
					},
					"401": {
						"description": "Unauthorized request"
					}
				}
			}
		},
		"users/signout": {
			"delete": {
				"tags": [
					"user"
				],
				"summary": "sign the user out",
				"description": "Authentication required",
				"operationId": " ",
				"consumes": [
					"application/json",
					"application/xml"
				],
				"produces": [
					"application/xml",
					"application/json"
				],
				"parameters": [
					{
						"in": "headers",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "object",
							"properties": {
								"Authorization": {
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Ok"
					},
					"401": {
						"description": "Unauthorized"
					}
				}
			}
		},
		"/auth/google": {
			"post": {
				"tags": [
					"Google login"
				],
				"summary": "Enable login with google",
				"description": "",
				"operationId": " ",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"type": "object",
							"properties": {
								"access_token": {
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Logged in successfully"
					},
					"201": {
						"description": "User logged in successfully for the first time"
					},
					"401": {
						"description": "Unauthorized request"
					}
				}
			}
		},
		"/users/reset_password": {
			"post": {
				"tags": [
					"Forgot password"
				],
				"summary": "Enable sending reset password link to the user",
				"description": "",
				"operationId": " ",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"type": "object",
							"$ref": "#/definitions/reset-email-info"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Reset Password email successfully delivered"
					},
					"404": {
						"description": "No user found with this email address"
					},
					"500": {
						"description": "Fail to send the reset email"
					}
				}
			}
		},
		"/users/password": {
			"put": {
				"tags": [
					"Forgot password"
				],
				"summary": "Enable the user to update password",
				"description": "",
				"operationId": "",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"security": [
					{
						"bearerToken": []
					}
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"type": "object",
							"$ref": "#/definitions/update-password-info"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Password updated successfully"
					},
					"400": {
						"description": "New password must be different from the current"
					},
					"404": {
						"description": "No user found with this email address"
					},
					"401": {
						"description": "Not authorized to update password"
					},
					"500": {
						"description": "Failed to update the password"
					},
					"default": {
						"description": "The link appears to be invalid or already expired"
					}
				}
			}
		},
		"/articles/rate/{slug}": {
			"post": {
				"tags": [
					"Rate articles"
				],
				"summary": "Create and post rate on articles",
				"description": "",
				"operationId": " ",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"type": "object",
							"$ref": "#/definitions/post-rate-info"
						}
					},
					{
						"in": "path",
						"name": "slug",
						"required": true,
						"schema": {
							"type": "string"
						},
						"description": "Alphanumeric id that uniquely identify an article"
					}
				],
				"responses": {
					"201": {
						"description": "The article was successfully rated"
					},
					"200": {
						"description": "The article rating was successfully edited"
					},
					"404": {
						"description": "Article was not found"
					},
					"500": {
						"description": "Fail to rate the article"
					}
				}
			}
		}
	},
	"securityDefinitions": {
		"bearerToken": {
			"type": "apiKey",
			"name": "Authorization",
			"description": "The authorization header must contain a Bearer token",
			"in": "header"
		}
	},
	"definitions": {
		"Users": {
			"type": "array",
			"items": {
				"type": "string"
			},
			"properties": {
				"username": {
					"type": "string"
				},
				"email": {
					"type": "email"
				},
				"bio": {
					"type": "string"
				},
				"password": {
					"type": "string"
				},
				"image": {
					"type": "string"
				},
				"provider": {
					"type": "string"
				},
				"createdAt": {
					"type": "string",
					"format": "date-time"
				},
				"updatedAt": {
					"type": "string"
				},
				"following": {
					"type": "boolean"
				}
			}
		},
		"ApiResponse": {
			"type": "object",
			"properties": {
				"code": {
					"type": "integer",
					"format": "int32"
				},
				"type": {
					"type": "string"
				},
				"message": {
					"type": "string"
				}
			}
		},
		"reset-email-info": {
			"type": "object",
			"properties": {
				"email": {
					"type": "email"
				}
			}
		},
		"update-password-info": {
			"type": "object",
			"properties": {
				"password": {
					"type": "string"
				}
			}
		},
		"post-rate-info": {
			"type": "object",
			"properties": {
				"userId": {
					"type": "integer",
					"format": "int32"
				},
				"rate": {
					"type": "integer",
					"format": "int32"
				}
			}
		}
	},
	"externalDocs": {
		"description": "More about Authors Haven",
		"url": "https://github.com/andela/ah-kgl-wakanda-backend/edit/develop/README.md"
	}
}